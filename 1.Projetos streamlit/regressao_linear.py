
import  streamlit as st
import pandas as pd
import numpy as np
import plotly.express as px
from PIL import Image
import base64
from io import BytesIO


st.set_page_config(
    page_title="Regress√£o Linear",
    layout= "centered",
    page_icon="üìà"
)

st.subheader("üìà Regress√£o Linear")

st.markdown("A regress√£o linear, que √© uma t√©cnica cl√°ssica de aprendizado supervisionado, pode ser aplicada em diversas √°reas onde h√° uma rela√ß√£o linear entre vari√°veis. Aqui est√£o alguns exemplos de onde voc√™ pode aplicar **regress√£o linear:**")

st.markdown("#### 1. Previs√£o de vendas")
st.markdown(" - **Exemplo:** Uma empresa pode usar regress√£o linear para prever as vendas de um produto com base em vari√°veis como o pre√ßo, o n√∫mero de promo√ß√µes, o tempo de publicidade, entre outras.")

st.markdown("#### 2. An√°lise de risco em finan√ßas")
st.markdown(" - **Exemplo:** Institui√ß√µes financeiras podem usar a regress√£o linear para prever o valor de ativos (como a√ß√µes ou im√≥veis) com base em vari√°veis como a taxa de juros, infla√ß√£o, ou o desempenho econ√¥mico.")

st.markdown("#### 3. Previs√£o de pre√ßos de im√≥veis")
st.markdown(" - **Exemplo:** Prever o pre√ßo de venda de um im√≥vel com base em caracter√≠sticas como a localiza√ß√£o, √°rea do im√≥vel, n√∫mero de quartos, e outras vari√°veis associadas.")

st.markdown("#### 4. An√°lise de marketing")
st.markdown(" - Exemplo: Uma empresa pode analisar como diferentes canais de marketing (como an√∫ncios online, TV, r√°dio) impactam as vendas ou o tr√°fego do site, e usar a regress√£o linear para prever os resultados com base em vari√°veis de marketing.")

st.markdown("#### 5. Ajuste de processos industriais")
st.markdown(" - **Exemplo:** Em uma f√°brica, a regress√£o linear pode ser usada para prever o rendimento ou a efici√™ncia da produ√ß√£o com base em vari√°veis como a temperatura, a press√£o, ou a quantidade de insumos.")

st.markdown("#### 6. Previs√£o de custos operacionais")
st.markdown(" - **Exemplo:** Empresas podem usar regress√£o linear para prever os custos operacionais (como custos de transporte, log√≠stica, energia) com base em vari√°veis como volume de produ√ß√£o, dist√¢ncias percorridas, entre outros fatores.")

st.markdown("#### 7. An√°lise de desempenho acad√™mico")
st.markdown(" - **Exemplo:** Prever a nota final de um aluno com base em vari√°veis como o n√∫mero de horas de estudo, participa√ß√£o em atividades extracurriculares, e hist√≥rico acad√™mico.")

st.markdown("#### 8. Previs√£o de demanda")
st.markdown(" - **Exemplo:** Empresas de varejo podem prever a demanda de determinados produtos em diferentes per√≠odos do ano com base em vari√°veis como clima, datas festivas, e padr√µes de consumo passados.")

st.markdown("#### 9. Sa√∫de e medicina")
st.markdown(" - **Exemplo:** Prever a press√£o arterial, n√≠veis de colesterol ou glicose com base em vari√°veis como idade, peso, altura, hist√≥rico familiar, h√°bitos alimentares, entre outros fatores.")

st.markdown("#### 10. An√°lise de clima")
st.markdown(" - **Exemplo:** Modelar a temperatura m√©dia de uma regi√£o com base em vari√°veis como a umidade, velocidade do vento, e hora do dia.")

st.markdown("**Considera√ß√µes importantes:**")
st.markdown(""" - A regress√£o linear √© mais eficaz quando as rela√ß√µes entre as vari√°veis s√£o aproximadamente lineares. 
                  Para dados que apresentam rela√ß√µes n√£o lineares, t√©cnicas mais avan√ßadas como a regress√£o polinomial ou redes neurais podem ser mais apropriadas.
""")

st.markdown("""Esses s√£o apenas alguns exemplos de como a regress√£o linear pode ser aplicada, e ela pode ser √∫til em muitos outros contextos dependendo dos dados dispon√≠veis e das vari√°veis envolvidas!
""")

st.markdown("##### Criando um modelo **regress√£o linear simples**")
st.markdown("""Nessa base de dados temos alguns dados de um plano de sa√∫de ficticio onde vamos colocar o modelo para prever o custo pela idade do paciente""")

data = pd.read_csv("plano_saude.csv")
st.dataframe(data)

x_plano_saude = data.iloc[:,0].values
y_plano_saude = data.iloc[:,1].values

x_plano_saude = x_plano_saude.reshape(-1,1)

from sklearn.linear_model import LinearRegression
regressor_plano_saude = LinearRegression()
regressor_plano_saude.fit(x_plano_saude,y_plano_saude)

previsoes = regressor_plano_saude.predict(x_plano_saude)

grafico = px.scatter(x = x_plano_saude.ravel(),y = y_plano_saude,title="Grafico")
grafico.add_scatter(x = x_plano_saude.ravel(),y = previsoes,name = "Regress√£o")

st.plotly_chart(grafico)

st.markdown("""
    - X Idade do Cliente
    - Y Custo Plano
    - Linha Previs√£o do Modelo
""")

st.markdown("""Obs: Os pontos no gr√°fico representa os dados da tabela plano de saude, a reta s√£o as previs√µes do modelo de regress√£o linear simples.""")

# Previs√£o de valores inseridos pelo usu√°rio
st.markdown("#### Previs√£o")
st.write("Em seguida insira um valor para que o modelo realize uma previs√£o")
valor_usuario = st.number_input("Digite a idade para prever os custos",min_value = 0.0)

if valor_usuario:
    previsao_usuario = regressor_plano_saude.predict(np.array([[valor_usuario]]))
    st.write(f"A previs√£o para a idade de {valor_usuario} anos √© de R$ {round(previsao_usuario[0],2)}")

# Caminho da imagem local
caminho_imagem = "imagem.JPG"

# Abrir imagem com PIL
imagem = Image.open(caminho_imagem)

# Converter imagem para base64
def get_image_base64(img):
    buffered = BytesIO()
    img.save(buffered, format="PNG")
    img_bytes = buffered.getvalue()
    return base64.b64encode(img_bytes).decode()

img_base64 = get_image_base64(imagem)

# CSS para imagem arredondada
st.markdown("""
    <style>
    .img-redonda {
        border-radius: 50%;
        width: 200px;
        height: 200px;
        object-fit: cover;
    }
    </style>
""", unsafe_allow_html=True)

# Exibir imagem com HTML
st.sidebar.markdown(f'<img src="data:image/png;base64,{img_base64}" class="img-redonda">', unsafe_allow_html=True)
#st.sidebar.image('imagem.jpg',caption= 'Nil Cordeiro - Machine Learning and Data Science student',width= 160,channels="RGB")
st.sidebar.markdown("**Nil Cordeiro Analista de Dados**")
st.sidebar.markdown("""
                
                    Principais tecnologias:
                    - Python
                    - Machine Learning
                    - Power Bi
                    - SQL
                    - Excel/VBA                  
""")



